# Гуляев Григорий Анатольевич
# The Post Office
from array import *
import math
# Координаты точек
p_x = array('i', [0, 2, 5, 6, 8, 0])        # Содержит заданные значения x
p_y = array('i', [2, 5, 2, 6, 3, 2])        # Содержит заданные значения y
r = [0] * (len(p_x) - 1)                    # Содержит значения растояний между тчоками
n_f = math.factorial(len(p_x)-2)            # n!
gen_px = [0] * n_f                          # Содержит все возможные значния x
gen_py = [0] * n_f                          # Содержит все возможные значния y
gen = [0] * n_f                             # Содержит список длинной n! со значениями [2345, 2354, ... , 5423, 5432]
R = [0] * n_f                               # Содержит информацию о длительности маршрутов
n = 0                                       # Дополнительная переменная для цикла
# Реализация формулы посредством лямбда выражения
rang = lambda x0, x1, y0, y1: ((x1 - x0) ** 2 + (y1 - y0) ** 2) ** 0.5
# Генерируем все возможные маршруты без привязки к координотам на плосхости
for i in range(2345, 5433):
    st = str(i)                             # Данная логика позволяет ислючить числа нарушающие правила проходжения по маршруту
    if (int(st[0]) > 1 and int(st[1]) > 1 and int(st[2]) > 1 and int(st[3]) > 1) and (int(st[0]) < int(6) and int(st[1]) < int(6) and int(st[2]) < int(6) and int(st[3]) < int(6)) and (int(st[0]) != int(st[1]) and int(st[0]) != int(st[2]) and int(st[0]) != int(st[3]) and int(st[1]) != int(st[2]) and int(st[1]) != int(st[3]) and int(st[2]) != int(st[3])):
        gen[n] = int('1' + str(i) + '1')    # Добавляем 1 т.к. почтовый офис находится вначале и в конеце маршрута!
        n = n + 1
# Генерируем все возможные коордитаны
for i in range(n_f):
    aa = str(gen[i])
    gen_px = [p_x[int(aa[0]) - 1], p_x[int(aa[1]) - 1], p_x[int(aa[2]) - 1], p_x[int(aa[3]) - 1], p_x[int(aa[4]) - 1], p_x[int(aa[5]) - 1]]
    gen_py = [p_y[int(aa[0]) - 1], p_y[int(aa[1]) - 1], p_y[int(aa[2]) - 1], p_y[int(aa[3]) - 1], p_y[int(aa[4]) - 1], p_y[int(aa[5]) - 1]]
    print("Маршрут №"+ str(i+1))
    print(gen_px)
    print(gen_py)
    # Рассчитываем расстояние между точками по известной формуле!
    for j in range(len(p_x) - 1):  #[0, 2, 5, 6, 8, 0]
        r[j] = rang(gen_px[j], gen_px[j + 1], gen_py[j], gen_py[j + 1])
    #print(r)
    R[i] = sum(r)
    print(str(R[i]) + "\n------------------")
print("Самый короткий маршрут:\n" + str(min(R)))


